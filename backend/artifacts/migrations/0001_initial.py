# Generated by Django 4.2.7 on 2025-10-06 20:30

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Artifact",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "inventory_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Numéro d'inventaire"
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Nom")),
                (
                    "name_fr",
                    models.CharField(max_length=200, null=True, verbose_name="Nom"),
                ),
                (
                    "name_en",
                    models.CharField(max_length=200, null=True, verbose_name="Nom"),
                ),
                (
                    "name_wo",
                    models.CharField(max_length=200, null=True, verbose_name="Nom"),
                ),
                ("description", models.TextField(blank=True)),
                ("description_fr", models.TextField(blank=True, null=True)),
                ("description_en", models.TextField(blank=True, null=True)),
                ("description_wo", models.TextField(blank=True, null=True)),
                ("historical_context", models.TextField(blank=True)),
                ("historical_context_fr", models.TextField(blank=True, null=True)),
                ("historical_context_en", models.TextField(blank=True, null=True)),
                ("historical_context_wo", models.TextField(blank=True, null=True)),
                (
                    "technique",
                    models.CharField(max_length=200, verbose_name="Technique"),
                ),
                (
                    "technique_fr",
                    models.CharField(
                        max_length=200, null=True, verbose_name="Technique"
                    ),
                ),
                (
                    "technique_en",
                    models.CharField(
                        max_length=200, null=True, verbose_name="Technique"
                    ),
                ),
                (
                    "technique_wo",
                    models.CharField(
                        max_length=200, null=True, verbose_name="Technique"
                    ),
                ),
                (
                    "dimensions",
                    models.CharField(max_length=100, verbose_name="Dimensions"),
                ),
                (
                    "weight",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Poids"
                    ),
                ),
                ("material", models.CharField(max_length=100, verbose_name="Matériau")),
                (
                    "material_fr",
                    models.CharField(
                        max_length=100, null=True, verbose_name="Matériau"
                    ),
                ),
                (
                    "material_en",
                    models.CharField(
                        max_length=100, null=True, verbose_name="Matériau"
                    ),
                ),
                (
                    "material_wo",
                    models.CharField(
                        max_length=100, null=True, verbose_name="Matériau"
                    ),
                ),
                (
                    "main_image",
                    models.ImageField(
                        upload_to="artifacts/", verbose_name="Image principale"
                    ),
                ),
                (
                    "qr_code",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="qr_codes/",
                        verbose_name="Code QR",
                    ),
                ),
                (
                    "acquisition_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date d'acquisition"
                    ),
                ),
                (
                    "acquisition_method",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Mode d'acquisition",
                    ),
                ),
                (
                    "acquisition_method_fr",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Mode d'acquisition",
                    ),
                ),
                (
                    "acquisition_method_en",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Mode d'acquisition",
                    ),
                ),
                (
                    "acquisition_method_wo",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Mode d'acquisition",
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Œuvre vedette"),
                ),
                (
                    "is_on_display",
                    models.BooleanField(default=True, verbose_name="Exposé au musée"),
                ),
                (
                    "display_location",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Emplacement d'exposition",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Œuvre",
                "verbose_name_plural": "Œuvres",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="Nom")),
                (
                    "name_fr",
                    models.CharField(max_length=200, null=True, verbose_name="Nom"),
                ),
                (
                    "name_en",
                    models.CharField(max_length=200, null=True, verbose_name="Nom"),
                ),
                (
                    "name_wo",
                    models.CharField(max_length=200, null=True, verbose_name="Nom"),
                ),
                ("description", models.TextField(blank=True)),
                ("description_fr", models.TextField(blank=True, null=True)),
                ("description_en", models.TextField(blank=True, null=True)),
                ("description_wo", models.TextField(blank=True, null=True)),
                (
                    "curator",
                    models.CharField(max_length=100, verbose_name="Conservateur"),
                ),
                (
                    "curator_fr",
                    models.CharField(
                        max_length=100, null=True, verbose_name="Conservateur"
                    ),
                ),
                (
                    "curator_en",
                    models.CharField(
                        max_length=100, null=True, verbose_name="Conservateur"
                    ),
                ),
                (
                    "curator_wo",
                    models.CharField(
                        max_length=100, null=True, verbose_name="Conservateur"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="collections/",
                        verbose_name="Image de collection",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Collection",
                "verbose_name_plural": "Collections",
                "ordering": ["name_fr"],
            },
        ),
        migrations.CreateModel(
            name="Culture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Nom")),
                (
                    "name_fr",
                    models.CharField(max_length=100, null=True, verbose_name="Nom"),
                ),
                (
                    "name_en",
                    models.CharField(max_length=100, null=True, verbose_name="Nom"),
                ),
                (
                    "name_wo",
                    models.CharField(max_length=100, null=True, verbose_name="Nom"),
                ),
                ("description", models.TextField(blank=True)),
                ("description_fr", models.TextField(blank=True, null=True)),
                ("description_en", models.TextField(blank=True, null=True)),
                ("description_wo", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Culture",
                "verbose_name_plural": "Cultures",
                "ordering": ["name_fr"],
            },
        ),
        migrations.CreateModel(
            name="Period",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("name_fr", models.CharField(max_length=100, null=True)),
                ("name_en", models.CharField(max_length=100, null=True)),
                ("name_wo", models.CharField(max_length=100, null=True)),
                ("start_year", models.IntegerField(blank=True, null=True)),
                ("end_year", models.IntegerField(blank=True, null=True)),
                ("description", models.TextField(blank=True)),
                ("description_fr", models.TextField(blank=True, null=True)),
                ("description_en", models.TextField(blank=True, null=True)),
                ("description_wo", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Période historique",
                "verbose_name_plural": "Périodes historiques",
                "ordering": ["start_year"],
            },
        ),
        migrations.CreateModel(
            name="VideoContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Titre")),
                (
                    "title_fr",
                    models.CharField(max_length=200, null=True, verbose_name="Titre"),
                ),
                (
                    "title_en",
                    models.CharField(max_length=200, null=True, verbose_name="Titre"),
                ),
                (
                    "title_wo",
                    models.CharField(max_length=200, null=True, verbose_name="Titre"),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "description_fr",
                    models.TextField(null=True, verbose_name="Description"),
                ),
                (
                    "description_en",
                    models.TextField(null=True, verbose_name="Description"),
                ),
                (
                    "description_wo",
                    models.TextField(null=True, verbose_name="Description"),
                ),
                (
                    "video_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="videos/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["mp4", "webm", "ogg"]
                            )
                        ],
                        verbose_name="Fichier vidéo",
                    ),
                ),
                (
                    "video_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="URL vidéo (YouTube/Vimeo)"
                    ),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(verbose_name="Durée (secondes)"),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="videos/thumbnails/",
                        verbose_name="Vignette",
                    ),
                ),
                (
                    "video_type",
                    models.CharField(
                        choices=[
                            ("documentary", "Documentaire"),
                            ("explanation", "Explication"),
                            ("interview", "Interview"),
                            ("animation", "Animation"),
                        ],
                        max_length=20,
                        verbose_name="Type de vidéo",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Ordre d'affichage"
                    ),
                ),
                (
                    "is_published",
                    models.BooleanField(default=True, verbose_name="Publié"),
                ),
                (
                    "artifact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="videos",
                        to="artifacts.artifact",
                        verbose_name="Œuvre",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contenu vidéo",
                "verbose_name_plural": "Contenus vidéo",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="ArtifactImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to="artifacts/gallery/", verbose_name="Image"
                    ),
                ),
                ("caption", models.CharField(max_length=200, verbose_name="Légende")),
                (
                    "caption_fr",
                    models.CharField(max_length=200, null=True, verbose_name="Légende"),
                ),
                (
                    "caption_en",
                    models.CharField(max_length=200, null=True, verbose_name="Légende"),
                ),
                (
                    "caption_wo",
                    models.CharField(max_length=200, null=True, verbose_name="Légende"),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Ordre d'affichage"
                    ),
                ),
                (
                    "artifact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="additional_images",
                        to="artifacts.artifact",
                        verbose_name="Œuvre",
                    ),
                ),
            ],
            options={
                "verbose_name": "Image supplémentaire",
                "verbose_name_plural": "Images supplémentaires",
                "ordering": ["order"],
            },
        ),
        migrations.AddField(
            model_name="artifact",
            name="collection",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="artifacts",
                to="artifacts.collection",
                verbose_name="Collection",
            ),
        ),
        migrations.AddField(
            model_name="artifact",
            name="culture",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="artifacts",
                to="artifacts.culture",
                verbose_name="Culture",
            ),
        ),
        migrations.AddField(
            model_name="artifact",
            name="period",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="artifacts",
                to="artifacts.period",
                verbose_name="Période",
            ),
        ),
        migrations.CreateModel(
            name="MuseumVisit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_id",
                    models.CharField(max_length=100, verbose_name="ID de session"),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("fr", "Français"),
                            ("en", "English"),
                            ("wo", "Wolof"),
                        ],
                        max_length=2,
                        verbose_name="Langue utilisée",
                    ),
                ),
                (
                    "duration_seconds",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Durée de visite (secondes)"
                    ),
                ),
                ("visited_at", models.DateTimeField(auto_now_add=True)),
                (
                    "artifact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="visits",
                        to="artifacts.artifact",
                        verbose_name="Œuvre visitée",
                    ),
                ),
            ],
            options={
                "verbose_name": "Visite",
                "verbose_name_plural": "Visites",
                "ordering": ["-visited_at"],
                "indexes": [
                    models.Index(
                        fields=["session_id"], name="artifacts_m_session_170516_idx"
                    ),
                    models.Index(
                        fields=["visited_at"], name="artifacts_m_visited_702d05_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AudioGuide",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        choices=[
                            ("fr", "Français"),
                            ("en", "English"),
                            ("wo", "Wolof"),
                        ],
                        max_length=2,
                        verbose_name="Langue",
                    ),
                ),
                (
                    "audio_file",
                    models.FileField(
                        upload_to="audio/guides/",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["mp3", "wav", "m4a"]
                            )
                        ],
                        verbose_name="Fichier audio",
                    ),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(verbose_name="Durée (secondes)"),
                ),
                (
                    "narrator",
                    models.CharField(max_length=100, verbose_name="Narrateur"),
                ),
                (
                    "narrator_fr",
                    models.CharField(
                        max_length=100, null=True, verbose_name="Narrateur"
                    ),
                ),
                (
                    "narrator_en",
                    models.CharField(
                        max_length=100, null=True, verbose_name="Narrateur"
                    ),
                ),
                (
                    "narrator_wo",
                    models.CharField(
                        max_length=100, null=True, verbose_name="Narrateur"
                    ),
                ),
                ("transcript", models.TextField(verbose_name="Transcription")),
                (
                    "transcript_fr",
                    models.TextField(null=True, verbose_name="Transcription"),
                ),
                (
                    "transcript_en",
                    models.TextField(null=True, verbose_name="Transcription"),
                ),
                (
                    "transcript_wo",
                    models.TextField(null=True, verbose_name="Transcription"),
                ),
                (
                    "artifact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audio_guides",
                        to="artifacts.artifact",
                        verbose_name="Œuvre",
                    ),
                ),
            ],
            options={
                "verbose_name": "Audio guide",
                "verbose_name_plural": "Audios guides",
                "ordering": ["artifact", "language"],
                "unique_together": {("artifact", "language")},
            },
        ),
        migrations.AddIndex(
            model_name="artifact",
            index=models.Index(
                fields=["inventory_number"], name="artifacts_a_invento_186d4d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="artifact",
            index=models.Index(
                fields=["is_featured"], name="artifacts_a_is_feat_4a825c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="artifact",
            index=models.Index(
                fields=["is_on_display"], name="artifacts_a_is_on_d_b1f6e7_idx"
            ),
        ),
    ]
